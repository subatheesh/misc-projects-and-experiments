/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package employee;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author adithya
 */
public class employee extends javax.swing.JFrame {
     Connection con;
     Statement stmt;
     PreparedStatement pstmt;
     ResultSet rs;
     CallableStatement cstmt;
    /**
     * Creates new form employee
     */
    public employee() {
         try
      {
          Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          JOptionPane.showMessageDialog(this,"Driver Loaded");
          try
          {
              con=DriverManager.getConnection("jdbc:odbc:adithya","SYSTEM","AdiSesh");
              JOptionPane.showMessageDialog(this,"connection established");
          }
          catch(SQLException ex)
          {
              JOptionPane.showMessageDialog(this,ex.getMessage());
          }
      }
      catch(ClassNotFoundException ex){
          JOptionPane.showMessageDialog(this, ex.getMessage());
      }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        emp_details = new javax.swing.JTabbedPane();
        EMPLOYEE = new javax.swing.JPanel();
        emp_id = new javax.swing.JLabel();
        empid = new javax.swing.JTextField();
        emp_name = new javax.swing.JLabel();
        empname = new javax.swing.JTextField();
        empdob = new javax.swing.JTextField();
        emp_dob = new javax.swing.JLabel();
        emp_sex = new javax.swing.JLabel();
        empsex = new javax.swing.JTextField();
        empdesgn = new javax.swing.JTextField();
        emp_desgn = new javax.swing.JLabel();
        empaddr = new javax.swing.JTextField();
        emp_addr = new javax.swing.JLabel();
        emp_phone = new javax.swing.JLabel();
        empphone = new javax.swing.JTextField();
        emp_mail = new javax.swing.JLabel();
        empmail = new javax.swing.JTextField();
        empdept = new javax.swing.JTextField();
        emp_dept = new javax.swing.JLabel();
        but_ins = new javax.swing.JButton();
        but_del = new javax.swing.JButton();
        but_upd = new javax.swing.JButton();
        but_ser = new javax.swing.JButton();
        but_first = new javax.swing.JButton();
        but_next = new javax.swing.JButton();
        but_prev = new javax.swing.JButton();
        but_last = new javax.swing.JButton();
        empexit = new javax.swing.JButton();
        empclear = new javax.swing.JButton();
        PAYROLL = new javax.swing.JPanel();
        pay_id = new javax.swing.JLabel();
        payid = new javax.swing.JTextField();
        pay_basic = new javax.swing.JLabel();
        paybasic = new javax.swing.JTextField();
        payda = new javax.swing.JTextField();
        pay_da = new javax.swing.JLabel();
        pay_hra = new javax.swing.JLabel();
        payhra = new javax.swing.JTextField();
        paypf = new javax.swing.JTextField();
        pay_pf = new javax.swing.JLabel();
        paymc = new javax.swing.JTextField();
        pay_mc = new javax.swing.JLabel();
        pay_gross = new javax.swing.JLabel();
        paygross = new javax.swing.JTextField();
        pay_totdeduc = new javax.swing.JLabel();
        paytotdeduc = new javax.swing.JTextField();
        paynet = new javax.swing.JTextField();
        pay_net = new javax.swing.JLabel();
        calculate = new javax.swing.JButton();
        but_display = new javax.swing.JButton();
        pay_ins = new javax.swing.JButton();
        payexit = new javax.swing.JButton();
        payclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        emp_details.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        emp_details.setToolTipText("PAYROLL");
        emp_details.setFont(new java.awt.Font("AngsanaUPC", 2, 24)); // NOI18N
        emp_details.setName("PAYROLL");

        emp_id.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_id.setText("ID");

        empid.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empidActionPerformed(evt);
            }
        });

        emp_name.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_name.setText("NAME");

        empname.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empnameActionPerformed(evt);
            }
        });

        empdob.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empdob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empdobActionPerformed(evt);
            }
        });

        emp_dob.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_dob.setText("DOB");

        emp_sex.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_sex.setText("SEX");

        empsex.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empsex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empsexActionPerformed(evt);
            }
        });

        empdesgn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empdesgn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empdesgnActionPerformed(evt);
            }
        });

        emp_desgn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_desgn.setText("DESIGNATION");

        empaddr.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empaddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empaddrActionPerformed(evt);
            }
        });

        emp_addr.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_addr.setText("ADDRESS");

        emp_phone.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_phone.setText("PHONE");

        empphone.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empphoneActionPerformed(evt);
            }
        });

        emp_mail.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_mail.setText("EMAIL");

        empmail.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empmailActionPerformed(evt);
            }
        });

        empdept.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        empdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empdeptActionPerformed(evt);
            }
        });

        emp_dept.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emp_dept.setText("DEPARTMENT");

        but_ins.setText("INSERT");
        but_ins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_insActionPerformed(evt);
            }
        });

        but_del.setText("DELETE");
        but_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_delActionPerformed(evt);
            }
        });

        but_upd.setText("UPDATE");
        but_upd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updActionPerformed(evt);
            }
        });

        but_ser.setText("SEARCH");
        but_ser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_serActionPerformed(evt);
            }
        });

        but_first.setText("FIRST");
        but_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_firstActionPerformed(evt);
            }
        });

        but_next.setText("NEXT");
        but_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_nextActionPerformed(evt);
            }
        });

        but_prev.setText("PREVIOUS");
        but_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_prevActionPerformed(evt);
            }
        });

        but_last.setText("LAST");
        but_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_lastActionPerformed(evt);
            }
        });

        empexit.setText("Exit");
        empexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empexitActionPerformed(evt);
            }
        });

        empclear.setText("Clear");
        empclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EMPLOYEELayout = new javax.swing.GroupLayout(EMPLOYEE);
        EMPLOYEE.setLayout(EMPLOYEELayout);
        EMPLOYEELayout.setHorizontalGroup(
            EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EMPLOYEELayout.createSequentialGroup()
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EMPLOYEELayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(but_first)
                            .addComponent(but_ins))
                        .addGap(46, 46, 46)
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(but_del, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(but_next, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EMPLOYEELayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emp_desgn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_sex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_addr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_phone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_mail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emp_dept, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)))
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EMPLOYEELayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(empmail, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empdept, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empaddr, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empphone, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empdob, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empsex, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empdesgn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empid, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empname, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EMPLOYEELayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(but_upd)
                            .addComponent(but_prev))
                        .addGap(36, 36, 36)
                        .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(but_ser)
                            .addComponent(but_last))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        EMPLOYEELayout.setVerticalGroup(
            EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EMPLOYEELayout.createSequentialGroup()
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EMPLOYEELayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(empid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empdob, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empsex, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empdesgn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(empaddr, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empphone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(empdept, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EMPLOYEELayout.createSequentialGroup()
                        .addComponent(empexit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(empclear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EMPLOYEELayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(emp_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_sex, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_desgn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(emp_addr, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_mail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(emp_dept, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_ins, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_del, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_upd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_ser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(EMPLOYEELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_first)
                    .addComponent(but_next)
                    .addComponent(but_prev)
                    .addComponent(but_last))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        emp_details.addTab("EMPLOYEE", EMPLOYEE);

        pay_id.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_id.setText("ID");

        payid.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        payid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payidActionPerformed(evt);
            }
        });

        pay_basic.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_basic.setText("BASIC");

        paybasic.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paybasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paybasicActionPerformed(evt);
            }
        });

        payda.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        payda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paydaActionPerformed(evt);
            }
        });

        pay_da.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_da.setText("DA");

        pay_hra.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_hra.setText("HRA");

        payhra.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        payhra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payhraActionPerformed(evt);
            }
        });

        paypf.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paypf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paypfActionPerformed(evt);
            }
        });

        pay_pf.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_pf.setText("PF");

        paymc.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paymc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymcActionPerformed(evt);
            }
        });

        pay_mc.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_mc.setText("MC");

        pay_gross.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_gross.setText("GROSS");

        paygross.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paygross.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paygrossActionPerformed(evt);
            }
        });

        pay_totdeduc.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_totdeduc.setText("TOTAL DEDUCTIONS");

        paytotdeduc.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paytotdeduc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paytotdeducActionPerformed(evt);
            }
        });

        paynet.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        paynet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paynetActionPerformed(evt);
            }
        });

        pay_net.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pay_net.setText("NET PAY");

        calculate.setText("CALCULATE");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        but_display.setText("DISPLAY");
        but_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_displayActionPerformed(evt);
            }
        });

        pay_ins.setText("INSERT");
        pay_ins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_insActionPerformed(evt);
            }
        });

        payexit.setText("Exit");
        payexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payexitActionPerformed(evt);
            }
        });

        payclear.setText("Clear");
        payclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PAYROLLLayout = new javax.swing.GroupLayout(PAYROLL);
        PAYROLL.setLayout(PAYROLLLayout);
        PAYROLLLayout.setHorizontalGroup(
            PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PAYROLLLayout.createSequentialGroup()
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PAYROLLLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pay_pf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_hra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_da, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_mc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_gross, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_totdeduc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pay_net, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(paytotdeduc, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paynet, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymc, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paygross, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payda, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payhra, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paypf, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payid, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paybasic, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(payclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(payexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(PAYROLLLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(calculate)
                        .addGap(39, 39, 39)
                        .addComponent(pay_ins)
                        .addGap(40, 40, 40)
                        .addComponent(but_display)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PAYROLLLayout.setVerticalGroup(
            PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PAYROLLLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_basic, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paybasic, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_da, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_hra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payhra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_pf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paypf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_mc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_gross, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paygross, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_totdeduc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paytotdeduc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_net, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paynet, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(PAYROLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pay_ins, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_display, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(PAYROLLLayout.createSequentialGroup()
                .addComponent(payexit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(payclear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        emp_details.addTab("PAYROLL", PAYROLL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emp_details)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emp_details, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>

    private void but_insActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try {
            String sql = ("insert into emp_details values(?,?,?,?,?,?,?,?,?)");
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, empid.getText());
            pstmt.setString(2, empname.getText());
            pstmt.setString(3, empdob.getText());
            pstmt.setString(4, empsex.getText());
            pstmt.setString(5, empdesgn.getText());
            pstmt.setString(6, empaddr.getText());
            pstmt.setString(7, empphone.getText());
            pstmt.setString(8, empmail.getText());
            pstmt.setString(9, empdept.getText());

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "New record added!");
            clear();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }                                       

    private void but_delActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try {
            String sql = ("delete from emp_details where eid=" + empid.getText() + "");
            pstmt = con.prepareStatement(sql);

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record deleted!");
            clear();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }                                       

    private void but_serActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select * from emp_details where eid=" + empid.getText() + "");
            rs.first();
            empname.setText(rs.getString(2));
            empdob.setText(rs.getString(3));
            empsex.setText(rs.getString(4));
            empdesgn.setText(rs.getString(5));
            empaddr.setText(rs.getString(6));
            empphone.setText(rs.getString(7));
            empmail.setText(rs.getString(8));
            empdept.setText(rs.getString(9));
            JOptionPane.showMessageDialog(this, "The searched record id displayed!!!");
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No records found!");
        }
        
    }                                       

    private void but_updActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try
        {
            if(empname.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set ename='" + empname.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empdob.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set dob='" + empdob.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empdesgn.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set designation='" + empdesgn.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empaddr.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set address='" + empaddr.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empphone.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set phone=" + empphone.getText() +" where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empmail.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set email='" + empmail.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            if(empdept.getText().compareToIgnoreCase("")!=0)
            {
                String sql=("update emp_details set department='" + empdept.getText() +"' where eid=" + empid.getText()+"");
                pstmt=con.prepareStatement(sql);
                pstmt.executeUpdate();
            }
            
            JOptionPane.showMessageDialog(this, "Employee Details are UPDATED successfully!!!");
            clear();
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }                                       

    private void empexitActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        System.exit(1);
    }                                       

    private void but_firstActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select * from emp_details order by eid");
            rs.first();
            empid.setText(rs.getString(1));
            empname.setText(rs.getString(2));
            empdob.setText(rs.getString(3));
            empsex.setText(rs.getString(4));
            empdesgn.setText(rs.getString(5));
            empaddr.setText(rs.getString(6));
            empphone.setText(rs.getString(7));
            empmail.setText(rs.getString(8));
            empdept.setText(rs.getString(9));
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No records found!");
        }
        
    }                                         

    private void but_lastActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select * from emp_details order by eid");
            rs.last();
            empid.setText(rs.getString(1));
            empname.setText(rs.getString(2));
            empdob.setText(rs.getString(3));
            empsex.setText(rs.getString(4));
            empdesgn.setText(rs.getString(5));
            empaddr.setText(rs.getString(6));
            empphone.setText(rs.getString(7));
            empmail.setText(rs.getString(8));
            empdept.setText(rs.getString(9));
            //JOptionPane.showMessageDialog(this, "The last record is displayed!!!");
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No records found!");
        }
    }                                        

    private void but_nextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try
        {
            rs.next();
            empid.setText(rs.getString(1));
            empname.setText(rs.getString(2));
            empdob.setText(rs.getString(3));
            empsex.setText(rs.getString(4));
            empdesgn.setText(rs.getString(5));
            empaddr.setText(rs.getString(6));
            empphone.setText(rs.getString(7));
            empmail.setText(rs.getString(8));
            empdept.setText(rs.getString(9));
            //JOptionPane.showMessageDialog(this, "The next record is displayed!!!");
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No records found!");
        }
    }                                        

    private void but_prevActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try
        {
            rs.previous();
            empid.setText(rs.getString(1));
            empname.setText(rs.getString(2));
            empdob.setText(rs.getString(3));
            empsex.setText(rs.getString(4));
            empdesgn.setText(rs.getString(5));
            empaddr.setText(rs.getString(6));
            empphone.setText(rs.getString(7));
            empmail.setText(rs.getString(8));
            empdept.setText(rs.getString(9));
            //JOptionPane.showMessageDialog(this, "The previous record is displayed!!!");
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No records found!");
        }
    }                                        

    private void payexitActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        System.exit(1);
    }                                       

    private void pay_insActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try {
            String sql = ("insert into payroll values(?,?,?,?,?,?,?,?,?)");
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, payid.getText());
            pstmt.setString(2, paybasic.getText());
            pstmt.setString(3, payda.getText());
            pstmt.setString(4, payhra.getText());
            pstmt.setString(5, paypf.getText());
            pstmt.setString(6, paymc.getText());
            pstmt.setString(7, paygross.getText());
            pstmt.setString(8, paytotdeduc.getText());
            pstmt.setString(9, paynet.getText());

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Pay details updated!");
            clear();
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }                                       

    private void but_displayActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select * from payroll where eid=" + payid.getText() + "");
            rs.first();
            paybasic.setText(rs.getString(2));
            payda.setText(rs.getString(3));
            payhra.setText(rs.getString(4));
            paypf.setText(rs.getString(5));
            paymc.setText(rs.getString(6));
            paygross.setText(rs.getString(7));
            paytotdeduc.setText(rs.getString(8));
            paynet.setText(rs.getString(9));
        }
        catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, "No record found!");
        }
    }                                           

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        try
        {
            cstmt=con.prepareCall("begin calculate(?,?,?,?,?,?,?,?,?); end;");
            cstmt.setInt(1, Integer.parseInt(payid.getText()));
            cstmt.setInt(2, Integer.parseInt(paybasic.getText()));
            cstmt.registerOutParameter(3, Types.INTEGER);
            cstmt.registerOutParameter(4, Types.INTEGER);
            cstmt.registerOutParameter(5, Types.INTEGER);
            cstmt.registerOutParameter(6, Types.INTEGER);
            cstmt.registerOutParameter(7, Types.INTEGER);
            cstmt.registerOutParameter(8, Types.INTEGER);
            cstmt.registerOutParameter(9, Types.INTEGER);
            cstmt.execute();
          
            payda.setText(""+cstmt.getInt(3));
            payhra.setText(""+cstmt.getInt(4));
            paypf.setText(""+cstmt.getInt(5));
            paymc.setText(""+cstmt.getInt(6));
            paygross.setText(""+cstmt.getInt(7));
            paytotdeduc.setText(""+cstmt.getInt(8));
            paynet.setText(""+cstmt.getInt(9));
            
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }                                         

    private void payclearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        payid.setText(null);
        paybasic.setText(null);
        payda.setText(null);
        payhra.setText(null);
        paypf.setText(null);
        paymc.setText(null);
        paygross.setText(null);
        paytotdeduc.setText(null);
        paynet.setText(null);
    }                                        

    private void empclearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        empid.setText(null);
        empname.setText(null);
        empdob.setText(null);
        empsex.setText(null);
        empdesgn.setText(null);
        empaddr.setText(null);
        empphone.setText(null);
        empmail.setText(null);
        empdept.setText(null);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new employee().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JPanel EMPLOYEE;
    private javax.swing.JPanel PAYROLL;
    private javax.swing.JButton but_del;
    private javax.swing.JButton but_display;
    private javax.swing.JButton but_first;
    private javax.swing.JButton but_ins;
    private javax.swing.JButton but_last;
    private javax.swing.JButton but_next;
    private javax.swing.JButton but_prev;
    private javax.swing.JButton but_ser;
    private javax.swing.JButton but_upd;
    private javax.swing.JButton calculate;
    private javax.swing.JLabel emp_addr;
    private javax.swing.JLabel emp_dept;
    private javax.swing.JLabel emp_desgn;
    private javax.swing.JTabbedPane emp_details;
    private javax.swing.JLabel emp_dob;
    private javax.swing.JLabel emp_id;
    private javax.swing.JLabel emp_mail;
    private javax.swing.JLabel emp_name;
    private javax.swing.JLabel emp_phone;
    private javax.swing.JLabel emp_sex;
    private javax.swing.JTextField empaddr;
    private javax.swing.JButton empclear;
    private javax.swing.JTextField empdept;
    private javax.swing.JTextField empdesgn;
    private javax.swing.JTextField empdob;
    private javax.swing.JButton empexit;
    private javax.swing.JTextField empid;
    private javax.swing.JTextField empmail;
    private javax.swing.JTextField empname;
    private javax.swing.JTextField empphone;
    private javax.swing.JTextField empsex;
    private javax.swing.JLabel pay_basic;
    private javax.swing.JLabel pay_da;
    private javax.swing.JLabel pay_gross;
    private javax.swing.JLabel pay_hra;
    private javax.swing.JLabel pay_id;
    private javax.swing.JButton pay_ins;
    private javax.swing.JLabel pay_mc;
    private javax.swing.JLabel pay_net;
    private javax.swing.JLabel pay_pf;
    private javax.swing.JLabel pay_totdeduc;
    private javax.swing.JTextField paybasic;
    private javax.swing.JButton payclear;
    private javax.swing.JTextField payda;
    private javax.swing.JButton payexit;
    private javax.swing.JTextField paygross;
    private javax.swing.JTextField payhra;
    private javax.swing.JTextField payid;
    private javax.swing.JTextField paymc;
    private javax.swing.JTextField paynet;
    private javax.swing.JTextField paypf;
    private javax.swing.JTextField paytotdeduc;
    // End of variables declaration

    private void clear() {
        empid.setText(null);
        empname.setText(null);
        empdob.setText(null);
        empsex.setText(null);
        empdesgn.setText(null);
        empaddr.setText(null);
        empphone.setText(null);
        empmail.setText(null);
        empdept.setText(null);
    }
}
