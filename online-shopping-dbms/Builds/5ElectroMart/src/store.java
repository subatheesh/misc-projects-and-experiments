
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Random; 
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sys
 */
public class store extends javax.swing.JFrame {

    /**
     * Creates new form store
    */
    
        
   
    Connection con;
     Statement stmt;
     PreparedStatement pstmt;
     ResultSet rs;
     CallableStatement cstmt;
      ResultSet rs1;
      Statement stmt1;
    public store() {
        
        
          try
      {
          Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

          try
          {
              con=DriverManager.getConnection("jdbc:odbc:EM","system","sys");
             
          }
          catch(SQLException ex)
          {
              JOptionPane.showMessageDialog(this,ex.getMessage());
          }
      }
      catch(ClassNotFoundException ex){
          JOptionPane.showMessageDialog(this, ex.getMessage());
      }
        
        
        initComponents();
        
          try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list order by item_type,item_name");
            
            rs.first();
          
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        load_next(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        img = new javax.swing.JLabel();

        setTitle("Store");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "Mobile", "Tablet", "Laptop", "Camera", "Other.." }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setText("Select Category:");

        jLabel2.setText("Order By:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Price: Low to High", "Price: High to Low", "Popularity" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "BUY", "Item ID", "Item Type", "Item Name", "Price", "QTY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Place Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Preview Product:");

        img.setText("Item Preview");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 112, Short.MAX_VALUE))
                    .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        if(jComboBox1.getSelectedItem()=="ALL")
        {
              try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
          
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list order by item_type,item_name");
            
            rs.first();
          
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        load_next(); 
        }
        else
        {
         try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list where item_type ='"+jComboBox1.getSelectedItem()+"' order by item_price");
            
            rs.first();
          
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        load_next(); 
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        
        if(jComboBox2.getSelectedItem()=="Price: Low to High")
        {
            
            try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            if(jComboBox1.getSelectedItem()=="ALL")
            {
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list order by item_price");
            }
            else
            {
              rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list where item_type ='"+jComboBox1.getSelectedItem()+"' order by item_price");
              
            }
            rs.first();
             load_next(); 
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
     
        
   
        }
        else if(jComboBox2.getSelectedItem()=="Price: High to Low")
        {
        
            try
        {
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
           if(jComboBox1.getSelectedItem()=="ALL")
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list order by item_price desc");
            else
             rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list where item_type ='"+jComboBox1.getSelectedItem()+"' order by item_price desc");   
            rs.first();
           load_next(); 
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
       
        
            
        }
        else if(jComboBox2.getSelectedItem()=="Popularity")
        {
            int i;
           
            try
        {
            stmt1=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs1=stmt1.executeQuery("select itemid from(select itemid,sum(qty) from orders group by itemid order by 2 desc)");
             //load_next();
             rs1.first();;
           
             for(i=0;i<table.getRowCount();i++)
           {
               stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
             if(jComboBox1.getSelectedItem()=="ALL")
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list where itemid ='"+rs1.getString(1) +"'");
            else
            rs=stmt.executeQuery ("select itemid,item_type,item_name,item_price from item_list where itemid ='"+rs1.getString(1)+"' and item_type ='"+jComboBox1.getSelectedItem()+"'");
               rs.first();
           table.getModel().setValueAt(rs.getString(1),i,1);
           table.getModel().setValueAt(rs.getString(2),i,2);
           table.getModel().setValueAt(rs.getString(3),i,3);
           table.getModel().setValueAt(rs.getString(4),i,4);
           
           rs1.next();
           }
            
            //load_next(); 
            //JOptionPane.showMessageDialog(this, "The first record is displayed!!!");
        }
          catch(SQLException ex)
        {
          //JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
     
    }//GEN-LAST:event_formMouseClicked

    private void tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMousePressed
 
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

       
        int i;
         for(i=0;i<table.getRowCount();i++)
        {
            Random randGen = new Random();
            try
            {
            if((boolean)table.getModel().getValueAt(i,0))
            {
            String sql = ("insert into orders values(?,?,?,?)");
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1,(randGen.nextInt(1000))+login.id_public);
            pstmt.setString(2, (String)table.getModel().getValueAt(i,1));
            pstmt.setString(3, login.id_public);
            pstmt.setString(4, (String)table.getModel().getValueAt(i,5));
           
            pstmt.executeUpdate();
            
            }
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
          for(i=0;i<table.getRowCount();i++)
        {
           table.getModel().setValueAt(false,i,0); 
           table.getModel().setValueAt("",i,1);
           table.getModel().setValueAt("",i,2);
           table.getModel().setValueAt("",i,3);
           table.getModel().setValueAt("",i,4);
           table.getModel().setValueAt("",i,5);
           
        }
         JOptionPane.showMessageDialog(this, "Order Placed !!");
         load_next(); 
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        
        String id = (String) table.getModel().getValueAt(table.rowAtPoint(evt.getPoint()),1);
        
        
        try{
        stmt=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
          
        rs=stmt.executeQuery ("select img_loc from item_list where itemid='"+id+"'");
            
        rs.first();
        
        String loc = rs.getString(1);
        System.out.println(loc);
        
        }
        catch(SQLException ex)
        {
            img.setText("IMG Not Found !!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new store().setVisible(true);
            }
        });
    }
    
    
     public void load_next()
    {
       
        try
        {
            int i;
           
            String sql1 = ("commit");
            pstmt = con.prepareStatement(sql1);
            pstmt.executeUpdate();
          
              for(i=0;i<table.getRowCount();i++)
        {
           table.getModel().setValueAt(false,i,0); 
           table.getModel().setValueAt("",i,1);
           table.getModel().setValueAt("",i,2);
           table.getModel().setValueAt("",i,3);
           table.getModel().setValueAt("",i,4);
           table.getModel().setValueAt("",i,5);
           
        }
            
       
       
        rs.first();
        
        
        for(i=0;i<table.getRowCount();i++)
        {
           table.getModel().setValueAt(false,i,0); 
           table.getModel().setValueAt(rs.getString(1),i,1);
           table.getModel().setValueAt(rs.getString(2),i,2);
           table.getModel().setValueAt(rs.getString(3),i,3);
           table.getModel().setValueAt(rs.getString(4),i,4);
           
           rs.next();
        }
              
         
        }         
        catch(SQLException ex)
        {
          System.out.println("No record!!");
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
